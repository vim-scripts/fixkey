*fixkey.txt*  Plugin to fix key codes for console Vim
*fixkey*      Version 0.2.1

==============================================================================
1.  Introduction                                    |fixkey-intro|
2.  Installation                                    |fixkey-installation|
3.  Terminal setup                                  |fixkey-term-setup|
3.1   Setup xterm                                   |fixkey-term-xterm|
3.2   Setup gnome-terminal                          |fixkey-term-gnome|
3.3   Setup Konsole                                 |fixkey-term-konsole|
3.4   Setup Linux console                           |fixkey-term-linux|
3.5   Setup PuTTY                                   |fixkey-term-putty|
3.6   Setup rxvt                                    |fixkey-term-rxvt|
3.7   Setup screen                                  |fixkey-term-screen|
3.8   Setup tmux                                    |fixkey-term-tmux|
3.9   Terminal testing                              |fixkey-term-testing|
4.  References                                      |fixkey-references|
5.  Credits                                         |fixkey-credits|

==============================================================================
1.  Introduction                                    *fixkey-intro*

It is surprisingly difficult to get console Vim to recognize keys outside the
normal ASCII range.  This plugin aims to hide the details of the back-flips
necessary to allow console Vim to successfully take advantage of non-ASCII
keys (e.g., function keys, alt+letters, etc.).

===============================================================================
2.  Installation                                    *fixkey-installation*

To install directly in your personal |vimfiles| directory (~/.vim under
unix or %HOMEPATH%\vimfiles under windows), unpack the downloaded archive
to yield these files: >

  doc/fixkey.txt
  plugin/fixkey.vim
  scripts/fixkeytest.vim

Then, re-generate your help tags with Vim's |:helptags| command, e.g.: >

  :helptags ~/.vim/doc

You may also install fixkey using a tool like pathogen[1] by unpacking
the downloaded archive into a bundle directory, e.g.: >

  ~/.vim/bundle/vim-fixkey

[1]: https://github.com/tpope/vim-pathogen

===============================================================================
3.  Terminal Setup                                  *fixkey-term-setup*

Unfortunately, almost no terminal seems to be setup correctly out-of-the-box,
due to various combinations of problems.  Many terminals are configured with
the TERM environment variable set to an incorrect value (often "xterm")
that doesn't match the actual key codes sent by the terminal.  Additionally,
Vim expects non-default behavior from most terminals, particularly with
respect to mapping Alt-keys.

Therefore, in addition to installing fixkey, there may be some
terminal-specific setup required to make everything work properly, described
in the following sections.

If necessary, see |fixkey-term-testing| for methods of testing and debugging
your terminal setup.

When properly setup, a fully functioning terminal can provide the following
keys:

  - Function keys (<F1> - <F12>).
  - Shifted function keys (<S-F1> - <S-F12>).
  - Alt-lowercase letters (<M-a> - <M-z>).
  - Alt-uppercase letters (<M-A> - <M-Z>).
  - Arrow keys (<Up>, <Down>, <Left>, <Right>).
  - Shifted Arrow keys (<S-Up>, <S-Down>, <S-Left>, <S-Right>).
  - Control Arrow keys (<C-Up>, <C-Down>, <C-Left>, <C-Right>).
  - <Home>, <End>, <S-Home>, <S-End>.

-------------------------------------------------------------------------------
3.1   Setup xterm                                   *fixkey-term-xterm*

There is no additional setup for using xterm unless the xterm defaults are
changed, as fixkey configures Vim to expect the correct key codes.

Because many terminal emulators masquerade as TERM=xterm, xterm has the
privilege of defining the "correct" keycodes for various keys.

For comparison with other terminals, here are the default keycodes for
xterm-293 from Fedora 19:

  Key     Keycode

    <F1>  \eOP
    <F2>  \eOQ
    <F3>  \eOR
    <F4>  \eOS
  <S-F1>  \e[1;2P
  <S-F2>  \e[1;2Q
  <S-F3>  \e[1;2R
  <S-F4>  \e[1;2S

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  none

-------------------------------------------------------------------------------
3.2   Setup gnome-terminal                          *fixkey-term-gnome*

gnome-terminal generally uses TERM=xterm (or TERM=xterm-256color), but there
are a number of differences with xterm that cannot be easily changed.
Fortunately, gnome-terminal also exports the environment variable
COLORTERM=gnome-terminal, so fixkey can detect when gnome-terminal is
masquerading as xterm and configure Vim accordingly.

However, when using ssh to connect to a remote machine, the variable COLORTERM
isn't carried to the remote machine by default, so when Vim runs on the remote
machine, the keys won't be fully correct unless COLORTERM is set in the
environment before launching the remote Vim.

When COLORTERM is not set properly, the following keys won't work properly:

  <S-F1>
  <S-F2>
  <S-F3>
  <S-F4>

Inoperable keys (terminal sends no codes):

  <F10>         (reserved for menu)
  <S-F10>       (reserved for context menu)
  <S-Home>      (reserved for scrollback)
  <S-End>       (reserved for scrollback)

Aliased keys:

  none

-------------------------------------------------------------------------------
3.3   Setup Konsole                                 *fixkey-term-konsole*

```````````````````````````````````````````````````````````````````````````````
Option 1: Configure Konsole to match xterm.

The KDE Konsole terminal emulator frequently masquerades as xterm via
TERM=xterm (or TERM=xterm-256color), but the key codes for <S-F1> through
<S-F4> don't match xterm.

To use TERM=xterm (or TERM=xterm-256color) with konsole, it's necessary to
change the Konsole key bindings for these keys (or live with them not working
properly).

Using Konsole 2.10.5 (from Fedora 19) as an example:

- Via the menu, visit Settings, Manage Profiles, Edit Profile, Keyboard tab.

- Highlight "Default (XFree 4)" and choose "New" to clone these default
  settings as a starting point.

- Set the description (e.g., "xterm-compatible").

- Locate each of the following bindings and change "Key Combination" to have
  the desired "Output" value:

    Key Combination           Output

    F1+AnyModifier            \E[1;*P
    F2+AnyModifier            \E[1;*Q
    F3+AnyModifier            \E[1;*R
    F4+AnyModifier            \E[1;*S

- Save this set of key bindings.

- Making sure that "xterm-compatible" is selected, choose "OK" to save the
  profile to use these bindings in the future.

- Restart all Konsole instances.

With these changes, Konsole will be xterm-compatible, both for Vim and for
other programs that use terminfo.

Default key codes for Konsole 2.10.5 (from Fedora 19):

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  none

```````````````````````````````````````````````````````````````````````````````
Option 2: Use TERM=konsole (or TERM=konsole-256color).

Instead of masquerading as xterm, it's possible to leave Konsole's key
bindings at their default and setup the TERM environment variable to match.

- Via the Konsole menu, visit Settings, Manage Profiles, Edit Profile.

- On the General tab, choose Environment Edit.

- Change TERM=xterm to TERM=konsole (or TERM=konsole-256color).

- Save the profile and restart all Konsole instances.

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  none

-------------------------------------------------------------------------------
3.4   Setup Linux console                           *fixkey-term-linux*

There is no additional setup for using the Linux text-mode console
(TERM=linux).

Inoperable keys (terminal sends no codes):

  <S-F9>
  <S-F10>
  <S-F11>
  <S-F12>

Aliased keys:

  <S-Home>      (same as <Home>)
  <S-End>       (same as <End>)
  <C-Up>        (same as <Up>)
  <C-Down>      (same as <Down>)
  <C-Left>      (same as <Left>)
  <C-Right>     (same as <Right>)

-------------------------------------------------------------------------------
3.5   Setup PuTTY                                   *fixkey-term-putty*

There are a couple of ways to setup PuTTY to get reasonable functionality.
By default, PuTTY masquerades as xterm despite many keys being different from
xterm.

```````````````````````````````````````````````````````````````````````````````
Option 1: Use TERM=putty (or TERM=putty-256color).

Using PuTTY's configuration menu:
- "Connection"
  - "Data"
    - Set "Terminal-type string" to "putty" (or "putty-256color")

Leave the Terminal.Keyboard settings at their defaults, and fixkey will
configure Vim accordingly.

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  <S-F1>        (same as <F11>)
  <S-F2>        (same as <F12>)
  <S-F11>       (same as <F11>)
  <S-F12>       (same as <F12>)
  <S-Home>      (same as <Home>)
  <S-End>       (same as <End>)

```````````````````````````````````````````````````````````````````````````````
Option 2: Use TERM=putty-sco

Full function-key support can be had by using PuTTY's "SCO" selection;
however, it has the side-effect that <Delete> is aliased to <Backspace>,
losing the <Delete> functionality.

Using PuTTY's configuration menu:
- "Connection"
  - "Data"
    - Set "Terminal-type string" to "putty-sco"
- "Terminal"
  - "Keyboard"
    - Set "The Function keys and keypad" to "SCO"

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  <Delete>      (same as <Backspace>)
  <S-Home>      (same as <Home>)
  <S-End>       (same as <End>)

-------------------------------------------------------------------------------
3.6   Setup rxvt                                    *fixkey-term-rxvt*

There is no additional setup for using rxvt (or rxvt-unicode) when
TERM=rxvt (or TERM=rxvt-unicode).

Inoperable keys (terminal sends no codes):

  <S-Home>      (reserved for scrollback for rxvt-unicode only)
  <S-End>       (reserved for scrollback for rxvt-unicode only)

Aliased keys:

  <S-F1>        (same as <F11>)
  <S-F2>        (same as <F12>)

-------------------------------------------------------------------------------
3.7   Setup screen                                  *fixkey-term-screen*

There is no additional setup for using screen (TERM=screen,
TERM=screen-256color).

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  none

-------------------------------------------------------------------------------
3.8   Setup tmux                                    *fixkey-term-tmux*

Tmux shares terminal names with screen (TERM=screen, TERM=screen-256color),
so fixkey treats them the same.

In your ~/.tmux.conf, do not set default-terminal; instead, allow tmux to set
it properly to either screen or screen-256color.  Otherwise, things won't work
properly according to the tmux FAQ, which says: >

  PLEASE NOTE: most display problems are due to incorrect TERM! Before
  reporting problems make SURE that TERM settings are correct inside and
  outside tmux.

  Inside tmux TERM must be "screen" or similar (such as "screen-256color").
  Don't bother reporting problems where it isn't!

In addition, to enable shifted function keys, place the following setting in
~/.tmux.conf: >

  set -g xterm-keys on

Inoperable keys (terminal sends no codes):

  none

Aliased keys:

  none

-------------------------------------------------------------------------------
3.9   Terminal testing                              *fixkey-term-testing*

Fixkey comes with a test script that helps determine when keys are working
correctly.  Launch console vim as follows to initiate the test: >

  vim '+runtime scripts/fixkeystest.vim'

Alternatively, launch console Vim, then run the following command: >

  :runtime scripts/fixkeystest.vim

Now press keys in normal-mode or insert-mode and observe whether the correct
key is displayed.

In addition, you can check the terminfo database for the expected key codes
for known keys.  The tput command can echo a key code, and the cat program can
display the result.  For example, to check the key code for <F1> on an xterm: >

  tput -Txterm kf1 | cat -A; echo
  ^[OP

This shows that the key code is \eOP (<Escape>OP) for "kf1" (<F1>).

The terminfo settings for the entire terminal can be shown via the infocmp
program: >

  infocmp xterm

  #       Reconstructed via infocmp from file: /usr/share/terminfo/x/xterm
  xterm|xterm terminal emulator (X Window System),
          am, bce, km, mc5i, mir, msgr, npc, xenl,
          colors#8, cols#80, it#8, lines#24, pairs#64,
  [...]

In addition, differences in terminfo between two terminals can be displayed as
well.  To see what changes between xterm and xterm-256color: >

  infocmp xterm xterm-256color

  comparing xterm to xterm-256color.
      comparing booleans.
          ccc: F:T.
      comparing numbers.
          colors: 8, 256.
          pairs: 64, 32767.
      comparing strings.
          initc: NULL, '\E]4;%p1%d;rgb\:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\E\\'.
          setab: '\E[4%p1%dm', '\E[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m'.
          setaf: '\E[3%p1%dm', '\E[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m'.
          setb: '\E[4%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m', NULL.
          setf: '\E[3%?%p1%{1}%=%t4%e%p1%{3}%=%t6%e%p1%{4}%=%t1%e%p1%{6}%=%t3%e%p1%d%;m', NULL.

===============================================================================
4.  References                                      *fixkey-references*

- "Mapping fast keycodes in terminal Vim":
  http://vim.wikia.com/wiki/Mapping_fast_keycodes_in_terminal_Vim

- ncurses FAQ describing shifted function keys:
  http://invisible-island.net/ncurses/ncurses.faq.html#modified_keys

- KDE Konsole developers stating their desire to have TERM=xterm for Konsole:
  https://bugs.kde.org/show_bug.cgi?id=145977

- Terminfo overview:
  http://tldp.org/HOWTO/Text-Terminal-HOWTO-16.html

- Modifying an existing terminfo database entry:
  http://www.jbase.com/r5/knowledgebase/howto/general/common/CreateTerminfo/modify.htm

- Function keys don't work in gnome-terminal:
  https://bugs.launchpad.net/ubuntu/+source/gnome-terminal/+bug/96676

===============================================================================
5.  Credits                                         *fixkey-credits*

Developed by Michael Henry (vim at drmikehenry.com).

Distributed under Vim's |license|.

Git repository:       https://github.com/drmikehenry/vim-fixkey

===============================================================================
vim:sts=2:et:ai:tw=78:fo=tcq2:ft=help:
